{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\hooks\\\\src\\\\component\\\\effect\\\\conditionalyEffect.jsx\",\n  _s = $RefreshSig$();\n/*\r\nعندما نستخدم افيكت فنحن نطلب من رياكت تنفيذ الدالة الموجودة بداخل ايفيكت في كل مرة يتم فيها عملية رندر\r\nوذلك قد يسبب مشاكل و لذلك نستخدمه في حالة مشروطة حيث نضيف مصفوفة من الحالات او الخصائص التي نريد لدالة الايفيكت ان يتم تنفيذها في حالة تغيير هذه الحالات او الخصائص فقط \r\nلو وضعنا مصفوفة فارغة ف هذا يعني اننا نريد ل دالة الايفيكت ان تعمل مرة واحدة فقط \r\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LearnConditionalyEffect = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    document.title = `you clicked ${count} times`;\n    console.log(\"use Effect is used\");\n  }, [count]);\n  /* لو وضعنا متغير الاسم هنا ايضا فان الدالة سيتم تنفيذها مع كل تغيير على الاسم  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: [\"you clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(LearnConditionalyEffect, \"wsUQFWP2D4cLVLNLd6kOfyh7zYc=\");\n_c = LearnConditionalyEffect;\nexport default LearnConditionalyEffect;\nvar _c;\n$RefreshReg$(_c, \"LearnConditionalyEffect\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LearnConditionalyEffect","_s","count","setCount","name","setName","document","title","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/react/hooks/src/component/effect/conditionalyEffect.jsx"],"sourcesContent":["/*\r\nعندما نستخدم افيكت فنحن نطلب من رياكت تنفيذ الدالة الموجودة بداخل ايفيكت في كل مرة يتم فيها عملية رندر\r\nوذلك قد يسبب مشاكل و لذلك نستخدمه في حالة مشروطة حيث نضيف مصفوفة من الحالات او الخصائص التي نريد لدالة الايفيكت ان يتم تنفيذها في حالة تغيير هذه الحالات او الخصائص فقط \r\nلو وضعنا مصفوفة فارغة ف هذا يعني اننا نريد ل دالة الايفيكت ان تعمل مرة واحدة فقط \r\n*/\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst LearnConditionalyEffect = () => {\r\n  const [count, setCount] = useState(0);\r\n  const [name, setName] = useState(\"\");\r\n  useEffect(() => {\r\n    document.title = `you clicked ${count} times`;\r\n    console.log(\"use Effect is used\");\r\n  }, [count]);\r\n  /* لو وضعنا متغير الاسم هنا ايضا فان الدالة سيتم تنفيذها مع كل تغيير على الاسم  */\r\n  return (\r\n    <div>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        you clicked {count} times\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LearnConditionalyEffect;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpCC,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACC,KAAK,GAAI,eAAcL,KAAM,QAAO;IAC7CM,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACnC,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EACX;EACA,oBACEH,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAQY,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAQ,QAAA,GAAC,cAC9B,EAACR,KAAK,EAAC,QACrB;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACThB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEb,IAAK;MACZc,QAAQ,EAAGC,CAAC,IAAKd,OAAO,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CApBID,uBAAuB;AAAAqB,EAAA,GAAvBrB,uBAAuB;AAsB7B,eAAeA,uBAAuB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}