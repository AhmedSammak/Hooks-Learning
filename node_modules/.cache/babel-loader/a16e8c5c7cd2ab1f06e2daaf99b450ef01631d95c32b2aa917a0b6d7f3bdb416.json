{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\hooks\\\\src\\\\component\\\\effect\\\\cleanerEffect.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LearnCleanerEffect = () => {\n  _s();\n  const [display, setDisplay] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDisplay(!display),\n      children: \"Toggle Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_s(LearnCleanerEffect, \"nOWmG5C542Nzw1cW1ktURuiMav0=\");\n_c = LearnCleanerEffect;\nexport default LearnCleanerEffect;\nvar _c;\n$RefreshReg$(_c, \"LearnCleanerEffect\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LearnCleanerEffect","_s","display","setDisplay","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react/hooks/src/component/effect/cleanerEffect.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst LearnCleanerEffect = () => {\r\n  const [display, setDisplay] = useState(false);\r\n  return (\r\n    <div>\r\n      <button onClick={() => setDisplay(!display)}>Toggle Display</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LearnCleanerEffect;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,oBACEE,OAAA;IAAAK,QAAA,eACEL,OAAA;MAAQM,OAAO,EAAEA,CAAA,KAAMF,UAAU,CAAC,CAACD,OAAO,CAAE;MAAAE,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV,CAAC;AAACR,EAAA,CAPID,kBAAkB;AAAAU,EAAA,GAAlBV,kBAAkB;AASxB,eAAeA,kBAAkB;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}