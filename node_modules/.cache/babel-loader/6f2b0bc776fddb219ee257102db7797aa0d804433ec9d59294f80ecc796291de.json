{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\hooks\\\\src\\\\component\\\\reducer\\\\useReducer3.jsx\",\n  _s = $RefreshSig$();\n/* useReducer\r\nهو هوك يستخدم لادارة الحالة و قد تم باستخدامه انشاء useState \r\n يقوم بتنفيذ تغيير معين على حالة ولكن بطريقة تختلف عن ال useState \r\n useReducer( reducer function , initial value) \r\n reducer(currentState,action ) return => new state \r\nنتحكم بالاكشن من خلال dispach \r\n حيث انها تستخدم داخل onclick كما هو موضح بالمثال\r\n يمكننا استخدام الاوبجكت بدلا من القيمة الواحدة في الحالة و ذلك يفضل في حالة امكانية اضافة تعديلات لاحقة \r\n يمكن ايضا استخدام اكثر من useReducer للتعامل مع اكثر من قيمة \r\n بالاضافة الى ذلك يمكننا استخدام useContext معه و ذلك لمشاركة الحالة مع اكثر من مكون \r\n */\nimport React from \"react\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = 0;\nconst reducer = (state, action) => {\n  switch (action) {\n    case \"increment\":\n      return state + 1;\n    case \"decrement\":\n      return state - 1;\n    case \"reset\":\n      return initialState;\n    default:\n      return state;\n  }\n};\nexport default function LearnReducer3() {\n  _s();\n  const [countOne, dispatch] = useReducer(reducer, initialState);\n  const [countTwo, dispatch2] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Count One : \", countOne]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch(\"increment\");\n      },\n      children: \"+ // counter 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch(\"decrement\");\n      },\n      children: \"- // counter 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch(\"reset\");\n      },\n      children: \"Reset // counter 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Count Two : \", countTwo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch2(\"increment\");\n      },\n      children: \"+ // counter 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch2(\"decrement\");\n      },\n      children: \"- // counter 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch2(\"reset\");\n      },\n      children: \"Reset // counter 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LearnReducer3, \"+FVSBZrHYfWK+/szLFIqhDpEhGk=\");\n_c = LearnReducer3;\nvar _c;\n$RefreshReg$(_c, \"LearnReducer3\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","reducer","state","action","LearnReducer3","_s","countOne","dispatch","countTwo","dispatch2","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/react/hooks/src/component/reducer/useReducer3.jsx"],"sourcesContent":["/* useReducer\r\nهو هوك يستخدم لادارة الحالة و قد تم باستخدامه انشاء useState \r\n يقوم بتنفيذ تغيير معين على حالة ولكن بطريقة تختلف عن ال useState \r\n useReducer( reducer function , initial value) \r\n reducer(currentState,action ) return => new state \r\nنتحكم بالاكشن من خلال dispach \r\n حيث انها تستخدم داخل onclick كما هو موضح بالمثال\r\n يمكننا استخدام الاوبجكت بدلا من القيمة الواحدة في الحالة و ذلك يفضل في حالة امكانية اضافة تعديلات لاحقة \r\n يمكن ايضا استخدام اكثر من useReducer للتعامل مع اكثر من قيمة \r\n بالاضافة الى ذلك يمكننا استخدام useContext معه و ذلك لمشاركة الحالة مع اكثر من مكون \r\n */\r\nimport React from \"react\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst initialState = 0;\r\nconst reducer = (state, action) => {\r\n  switch (action) {\r\n    case \"increment\":\r\n      return state + 1;\r\n\r\n    case \"decrement\":\r\n      return state - 1;\r\n\r\n    case \"reset\":\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default function LearnReducer3() {\r\n  const [countOne, dispatch] = useReducer(reducer, initialState);\r\n  const [countTwo, dispatch2] = useReducer(reducer, initialState);\r\n  return (\r\n    <>\r\n      <div> Count One : {countOne}</div>\r\n      <button\r\n        onClick={() => {\r\n          dispatch(\"increment\");\r\n        }}\r\n      >\r\n        + // counter 1\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          dispatch(\"decrement\");\r\n        }}\r\n      >\r\n        - // counter 1\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          dispatch(\"reset\");\r\n        }}\r\n      >\r\n        Reset // counter 1\r\n      </button>\r\n      <div> Count Two : {countTwo}</div>\r\n\r\n      <button\r\n        onClick={() => {\r\n          dispatch2(\"increment\");\r\n        }}\r\n      >\r\n        + // counter 2\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          dispatch2(\"decrement\");\r\n        }}\r\n      >\r\n        - // counter 2\r\n      </button>\r\n\r\n      <button\r\n        onClick={() => {\r\n          dispatch2(\"reset\");\r\n        }}\r\n      >\r\n        Reset // counter 2\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,YAAY,GAAG,CAAC;AACtB,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM;IACZ,KAAK,WAAW;MACd,OAAOD,KAAK,GAAG,CAAC;IAElB,KAAK,WAAW;MACd,OAAOA,KAAK,GAAG,CAAC;IAElB,KAAK,OAAO;MACV,OAAOF,YAAY;IAErB;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AACD,eAAe,SAASE,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAGZ,UAAU,CAACM,OAAO,EAAED,YAAY,CAAC;EAC9D,MAAM,CAACQ,QAAQ,EAAEC,SAAS,CAAC,GAAGd,UAAU,CAACM,OAAO,EAAED,YAAY,CAAC;EAC/D,oBACEH,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA;MAAAa,QAAA,GAAK,eAAa,EAACJ,QAAQ;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClCjB,OAAA;MACEkB,OAAO,EAAEA,CAAA,KAAM;QACbR,QAAQ,CAAC,WAAW,CAAC;MACvB,CAAE;MAAAG,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjB,OAAA;MACEkB,OAAO,EAAEA,CAAA,KAAM;QACbR,QAAQ,CAAC,WAAW,CAAC;MACvB,CAAE;MAAAG,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjB,OAAA;MACEkB,OAAO,EAAEA,CAAA,KAAM;QACbR,QAAQ,CAAC,OAAO,CAAC;MACnB,CAAE;MAAAG,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjB,OAAA;MAAAa,QAAA,GAAK,eAAa,EAACF,QAAQ;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAElCjB,OAAA;MACEkB,OAAO,EAAEA,CAAA,KAAM;QACbN,SAAS,CAAC,WAAW,CAAC;MACxB,CAAE;MAAAC,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjB,OAAA;MACEkB,OAAO,EAAEA,CAAA,KAAM;QACbN,SAAS,CAAC,WAAW,CAAC;MACxB,CAAE;MAAAC,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETjB,OAAA;MACEkB,OAAO,EAAEA,CAAA,KAAM;QACbN,SAAS,CAAC,OAAO,CAAC;MACpB,CAAE;MAAAC,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACT,CAAC;AAEP;AAACT,EAAA,CArDuBD,aAAa;AAAAY,EAAA,GAAbZ,aAAa;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}