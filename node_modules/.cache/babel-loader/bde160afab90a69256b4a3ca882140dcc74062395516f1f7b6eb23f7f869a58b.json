{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\hooks\\\\src\\\\component\\\\effect\\\\fetchingData.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LearnFetchingData = () => {\n  _s();\n  const [post, setPost] = useState({});\n  const [id, setId] = useState(1);\n  useEffect(() => {\n    axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`).then(res => setPost(res.data)).then(err => console.log(`Error is ${err}`));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" Enter the number of post (1-100) to show its title \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      onChange: e => {\n        if (id > 0 && id < 100) {\n          setId(e.target.value);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" \", post.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(LearnFetchingData, \"bZCUeoO3wlYjEW/xjvOaWldnKsI=\");\n_c = LearnFetchingData;\nexport default LearnFetchingData;\nvar _c;\n$RefreshReg$(_c, \"LearnFetchingData\");","map":{"version":3,"names":["axios","React","useState","useEffect","jsxDEV","_jsxDEV","LearnFetchingData","_s","post","setPost","id","setId","get","then","res","data","err","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","title","_c","$RefreshReg$"],"sources":["D:/react/hooks/src/component/effect/fetchingData.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst LearnFetchingData = () => {\r\n  const [post, setPost] = useState({});\r\n  const [id, setId] = useState(1);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n      .then((res) => setPost(res.data))\r\n      .then((err) => console.log(`Error is ${err}`));\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <h4> Enter the number of post (1-100) to show its title </h4>\r\n      <input\r\n        type=\"text\"\r\n        value={id}\r\n        onChange={(e) => {\r\n          if (id > 0 && id < 100) {\r\n            setId(e.target.value);\r\n          }\r\n        }}\r\n      />\r\n      <h4> {post.title} </h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LearnFetchingData;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACQ,EAAE,EAAEC,KAAK,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAE/BC,SAAS,CAAC,MAAM;IACdH,KAAK,CACFY,GAAG,CAAE,8CAA6CF,EAAG,EAAC,CAAC,CACvDG,IAAI,CAAEC,GAAG,IAAKL,OAAO,CAACK,GAAG,CAACC,IAAI,CAAC,CAAC,CAChCF,IAAI,CAAEG,GAAG,IAAKC,OAAO,CAACC,GAAG,CAAE,YAAWF,GAAI,EAAC,CAAC,CAAC;EAClD,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;EAER,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7DlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,EAAG;MACVgB,QAAQ,EAAGC,CAAC,IAAK;QACf,IAAIjB,EAAE,GAAG,CAAC,IAAIA,EAAE,GAAG,GAAG,EAAE;UACtBC,KAAK,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QACvB;MACF;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFlB,OAAA;MAAAc,QAAA,GAAI,GAAC,EAACX,IAAI,CAACqB,KAAK,EAAC,GAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;AAAChB,EAAA,CA1BID,iBAAiB;AAAAwB,EAAA,GAAjBxB,iBAAiB;AA4BvB,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}