{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\hooks\\\\src\\\\component\\\\providerContext.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport React from \"react\";\nimport Consuming from \"./consumerContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CounterContext = /*#__PURE__*/React.createContext();\nexport default function Providing() {\n  _s();\n  const [counter, setCounter] = useState(0);\n  function handleClick() {\n    setCounter(counter + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CounterContext.Provider, {\n      value: \" Hi From Consuming function\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Consuming, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n/* useContext \r\nالهدف الاساسي من هذا ال هوك هو تجنب استخدام \r\nprop drilling && lefting state up \r\nعند محاولة نقل حالة معينة من مكون لاخر \r\nحيث يعتمد على ملفين واحد يعطي الحالة و الاخر يستقبلها بناءا على نص معين كما هو موضح بالاعلى \r\n*/\n_s(Providing, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n_c = Providing;\nvar _c;\n$RefreshReg$(_c, \"Providing\");","map":{"version":3,"names":["useState","React","Consuming","jsxDEV","_jsxDEV","Fragment","_Fragment","CounterContext","createContext","Providing","_s","counter","setCounter","handleClick","children","Provider","value","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react/hooks/src/component/providerContext.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport Consuming from \"./consumerContext\";\r\n\r\nexport const CounterContext = React.createContext();\r\nexport default function Providing() {\r\n  const [counter, setCounter] = useState(0);\r\n  function handleClick() {\r\n    setCounter(counter + 1);\r\n  }\r\n  return (\r\n    <>\r\n      <CounterContext.Provider value={\" Hi From Consuming function\"}>\r\n        <button onClick={handleClick}>+1</button>\r\n        <p>{counter}</p>\r\n        <Consuming />\r\n      </CounterContext.Provider>\r\n    </>\r\n  );\r\n}\r\n/* useContext \r\nالهدف الاساسي من هذا ال هوك هو تجنب استخدام \r\nprop drilling && lefting state up \r\nعند محاولة نقل حالة معينة من مكون لاخر \r\nحيث يعتمد على ملفين واحد يعطي الحالة و الاخر يستقبلها بناءا على نص معين كما هو موضح بالاعلى \r\n*/\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,OAAO,MAAMC,cAAc,gBAAGN,KAAK,CAACO,aAAa,CAAC,CAAC;AACnD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACzC,SAASa,WAAWA,CAAA,EAAG;IACrBD,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;EACzB;EACA,oBACEP,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACEV,OAAA,CAACG,cAAc,CAACQ,QAAQ;MAACC,KAAK,EAAE,6BAA8B;MAAAF,QAAA,gBAC5DV,OAAA;QAAQa,OAAO,EAAEJ,WAAY;QAAAC,QAAA,EAAC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzCjB,OAAA;QAAAU,QAAA,EAAIH;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBjB,OAAA,CAACF,SAAS;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC,gBAC1B,CAAC;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AALAX,EAAA,CAfwBD,SAAS;AAAAa,EAAA,GAATb,SAAS;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}